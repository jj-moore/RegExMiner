<Backstory>
<html><body><div class="intro">
Your father, Eddie, has always been an impulsive treasure hunter. From antique shows to metal detecting to geo-caching, he's always on the lookout for hidden treasure. But this time your afraid he's gone too far.<br><br>

In a recent real estate auction, your father has impulsively spent his retirement savings on a sprawling old junkyard, complete with junk, in Arkansas of all places. Building materials, cars, appliances, circuit boards, your father salivates as he describes to you the treasures he expects to find in "Crazy Eddies Amazing Emporium of Total Bargain Madness!!!"<br><br>

Recently unemployed and looking for a change, you make an impuslive move of your own and move down to Arkansas with your wife and 11-year old son. Your son loves exploring the junkyard and one days comes running up and excitedly exclaims "Dad, you've to seen the machine I found!".<br><br>

You humor your son and follow him through a maze of towering junk, "Robert! I've told you to stay on the edge of the junk pile! This stuff is liable to tip over!".<br><br> 

"It's not much farther father." he calls back while running ahead. Your son leads you to a truck-sized, football-shaped machine with what looks to be some kind of orifice at each end. "What is it Dad?".<br><br>

It's a monster of a machine covered in dials, levers, gears with what look to be tank tracks on each side. It looks like something from a Jules Verne novel. Intrigued you look around and find some dusty hand-written notes, and head back home with your son.<br><br>

From the notes you are able to determine that this machine is supposed to be some kind of mining machine. It's hard to believe, but apparently, if you can program it with the correct codes (assuming it works at all), it can extra materials from the ground without disturbing the surrounding area.<br><br>

Time has not been kind to the digger (your son has named it Doug) and trying to repair the machine has become a family obsession. Scavenging parts from the junkyard, you think you might be able to get it running again.<br><br>

You've managed to repair the Motivational Gear Mechinator. Your wife has been studying the plans and thinks he understands the Pattern Implementation Processor. As long as the Match Execution Apparatus is still functional you might be in business!<br><br>

Before it can be let loose, the target area must be sonogrammed, x-rayed and digitized. And it uses an large amount of natural gas to operate the boiler that powers the tracks. So each dig will have overhead costs, you just hope you can find enough materials to cover the cost of operation.<br><br>

The whole family has been working for months and finally it's ready for a trial run. Today is the day!!!
</div></body></html>
</Backstory>

<GameRules>
<html><body><div class="intro">
Welcome to RegEx Miner!<br><br>

Your recently discovered Matter Extractavator, Doug, is a jumble of scrap parts, gears, tubes and levers, but it's working!<br><br>

Doug can be programed to mine raw materials (e.g. coal and iron) using Regular Expressions. <br><br>

These valuable materials can be sold on the commodity market but beware, if your expression matches anything except these raw materials, Doug's Commodity Inseperatizer will malfunction and ruin the entire batch!<br><br>

There are costs associated with operating Doug, such as scanning the target area and fueling Doug. The more materials you can match with a single expression, the more cost effective your operation. Just keep in mind the following:<br><br>

<ul>
<li>Your understanding of Doug's programming is very limited at first and you will only be able to use a small number of regex wildcards and modifiers.</li>
<li>Commodity prices fluctuate. Wait for the right time to sell, but keep an eye on storage space.</li>
<li>You've done the best you can restoring Doug, but there are still some problems. For example, The Pattern Imprintifier burns out with every dig. As a result, you can only use each regex expression one time. Sometimes a minor change of a literal to a wildcard (or vice versa) will allow Doug to dig again.</li>
</ul>

As you progress, you will be able to use more and more complex expressions, research new materials and make improvements to Doug. Do not be dismayed if you barely break even to start.<br><br>

Good luck!
</div></body></html>
</GameRules>

<RegExIntro>
<html><body><div class="intro">
Regular Expressions (Regexes) are a powerful tool found in many programming languages and used in many applications to: search text, extract data and validate user input.<br><br>

Regex is made up of a series of literal characters, wildcards, and modifiers to describe the text you wish to find. Here's a quick description of each of these types of characters used in regex:<br><br>

<ul>
<li>LITERAL CHARACTERS (LITERALS): A literal character is simply a character you wish to find. For example if you wanted to find 'cat' in a document, you would search for a 'c' followed by an 'a' followed by a 't'. This is the simplest and most direct use of regex.</li><br>

<li>WILDCARDS: Wildcards can be used to match more than one character. For example, the dot character '.' represents any single character. If your search expression is 'b.at' it would match 'boat', 'brat', or even 'b!at'. But it would not match 'bat' (because there is no character between the 'b' and the 'a' or 'Boat' (because regex is case sensitive by default). There are many other wildcards that can be used to match a number, a letter, an empty space, or even a range of characters</li><br>

<li>MODIFIERS: A modifier will change the meaning of other characters. For example the question mark '?' makes the character before it optional. So the expression 'b?at' would match 'bat' or 'at' but not 'brat'. There are many other modifiers that you'll be introduced to.</li><br>

To show an example of a more complicated expression, '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!-@#\$%\^&\*]).{8,}+' can be used to verify that a password is at least 8 characters long, has at least one lowercase letter, one uppercase letter, one number and one symbol.<br><br>

The game will introduce basic concepts and become progressively more complex.
</div></body></html>
</RegExIntro>

<Level1Intro>
<html><body><div class="intro">
Level 1: Your first venture<br><br>

Having invested most of your mine in the scrap yard and restoring Doug, you can't afford to buy premium mining land. So, you figure your best shot is just to take Doug out to an abondaned mine and see what happens.<br><br>

But... Oh no! Scans show that structural irregularities in the surrounding area have caused some of the letters in the raw materials to collapse!!<br><br>

It's too late now and you'll have to do your best to extract what you can.<br><br>

In this level you will be trying to match the words "coal" or "iron" but some of the letters may have been replaced by a dash "-". So you'll try to match words such as 'c-al' 'co-l' or '--al'. if you can match the correct characters you'll collect the respective commodity.<br><br>

In level 1 you will only be able to use literal characters and the dot '.' wildcard. Doug will not understand an expression containing any other characters.<br><br>

The dot will match any single character (so 'c.al' will match 'coal' and 'c-al')<br><br>
. 
Don't forget to keep an eye on your inventory levels. Remember you can only use each expression once. And try to keep losses at a minimum while you get used to the controls!<br><br>
</div></body></html>
</Level1Intro>

<Level2Intro>
<html><body><div class="level2">
CONGRATULATIONS YOU'VE REACHED LEVEL 2!!<br><br>

At this rate you're going to go broke. You're not sure how you're going afford to make improvements to Doug, your operation, or find more lucrative ground unless you find a way to make some changes.<br><br>

The good news is that you've managed to improve the Pattern Implementation Processor (PIP) and in addition to the dot wildcard you can now use the question mark '?'. The question mark makes the previous character optional. So 'b?oat?' will match 'boat' or 'oat' or 'boa' as the 'b' and 't' are optional.<br><br>

The area around the abandoned mine has continued to deteriorate and in addition to some letters being flattened to a dash, some letters are now completely missing! But, thanks to Doug, you are able to salvage materials that traditional mining companies cannot!<br><br>

You'll still be matching commodities such as 'c-al' and 'co-l' but now you'll also be matching 'c-l' 'col' and 'cal'. The more you can match with a single expression, the better, but you also have to know when to walk away from an area.<br><br>
</div></body></html>
</Level2Intro>

<Level3Intro>
<html><body><div class="level2">
CONGRATULATIONS YOU'VE REACHED LEVEL 3!!<br><br>

While the abandoned mine is providing good experience, it's simply not paying the bills.<br><br> 

You've found some promising ground for cheap. Recent seismic activity has stretched the target commodities such that regular mining companies can't work the land. But you've managed to make further progress on Doug's PIP that should be just the thing you need to extract commodities from this area.<br><br>

You'll be search for commodities such as 'coooaaaal' and 'irrooon'. All of the letters will be present but the middle letters may repeat.<br><br>

To help with your matches you can now use the plus '+' modifier. The plus modifier matches the previous character one to unlimited times. So 'bo+t' will match 'bot' 'boot' or even 'booot'.<br><br>

The challenge here will be finding enough unique expressions to allow you to keep digging. Remember, you can still use '.' and '?'.<br><br>

Good luck!
</div></body></html>
<Level3Intro>

